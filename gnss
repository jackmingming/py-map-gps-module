ser = serial.Serial(serial_port, serial_speed, timeout = 1)

GPSDAT = {
 'strType': None,
 'fixTime': None,
 'lat': None,
 'latDir': None,
 'lon': None,
 'lonDir': None,
 'fixQual': None,
 'numSat': None,
 'horDil': None,
 'alt': None,
 'altUnit': None,
 'galt': None,
 'galtUnit': None,
 'DPGS_updt': None,
 'DPGS_ID': None
}

def parseResponse(gpsLine):
 global lastLocation
 gpsChars = gpsLine
 if "*" not in gpsChars:
    return False

 gpsStr, chkSum = gpsChars.split('*') 
 gpsComponents = gpsStr.split(',')
 gpsStart = gpsComponents[0]
 if (gpsStart == "$GNGGA"):
    chkVal = 0
 for ch in gpsStr[1:]: # Remove the $
    chkVal ^= ord(ch)
 if (chkVal == int(chkSum, 16)):
 for i, k in enumerate(
 ['strType', 'fixTime', 
 'lat', 'latDir', 'lon', 'lonDir',
 'fixQual', 'numSat', 'horDil', 
 'alt', 'altUnit', 'galt', 'galtUnit',
 'DPGS_updt', 'DPGS_ID']):
 GPSDAT[k] = gpsComponents[i]
 print gpsChars
 print json.dumps(GPSDAT, indent=2)

while True:
 data = ser.readline()
 if data:
 parseResponse(data)
 # print data

# List all devices that are connected to macbook
 ===============================================================================

 ls -l /dev/cu.usb*
 ls /dev/cu*
 kextstat


 =====================================================



var mymap = L.map('mapid').setView([51.505, -0.09], 13);

L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
    maxZoom: 18,
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
    id: 'mapbox.streets'
}).addTo(mymap);

L.marker([51.5, -0.09]).addTo(mymap)
    .bindPopup("<b>Hello world!</b><br />I am a popup.").openPopup();

L.circle([51.508, -0.11], 500, {
    color: 'red',
    fillColor: '#f03',
    fillOpacity: 0.5
}).addTo(mymap).bindPopup("I am a circle.");

L.polygon([
    [51.509, -0.08],
    [51.503, -0.06],
    [51.51, -0.047]
]).addTo(mymap).bindPopup("I am a polygon.");


var popup = L.popup();

function onMapClick(e) {
    popup
        .setLatLng(e.latlng)
        .setContent("You clicked the map at " + e.latlng.toString())
        .openOn(mymap);
}

mymap.on('click', onMapClick);

